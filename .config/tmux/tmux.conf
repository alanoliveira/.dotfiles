set-environment -g TMUX_SCRIPTS "$HOME/.config/tmux/scripts/"

set -g default-terminal "tmux-256color"
set -a terminal-overrides ",alacritty:RGB"

# general options
set  -g prefix F3             # fake prefix (some command don't work without a prefix)
set  -g base-index 1          # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
setw -g automatic-rename on   # rename window to reflect current program
set  -g renumber-windows on   # renumber windows when a window is closed
set  -g escape-time 0         # no delay esc
set  -g status off            # no status line
set  -g history-limit 5000    # busted history
set  -g detach-on-destroy off # prevent detach on last panel is closed but there are other sessions
set  -g status-interval 0     # faster panel update
set  -g automatic-rename-format "#{?#{==:#{pane_current_command},#{b:SHELL}}, #{b:pane_current_path},#{?#{==:#{pane_current_command},nvim}, #{b:pane_current_path},#{pane_current_command}}}"

# aliases
set -s command-alias[101] vsplit='split -h'
set -s command-alias[102] vs='split -h'
set -s command-alias[103] cd="attach-session -t . -c '#{pane_current_path}'"
set -s command-alias[104] tldr="set-hook -p after-set-buffer \"display-popup 'tldr --color always $(tmux show-buffer) | less -r'; set-hook -p -u after-set-buffer ; delete-buffer\"; set-buffer"

# unbind some defaults
unbind n # next-window
unbind p # previous-window
unbind s # choose-tree

# prefix tricky
bind -n C-a switch-client -T prefix \; display-message -d 0 "#{E:status-format[0]}"
bind C-a send-keys C-a # send a raw C-a if prefix already sent

# edit configuration
bind e new-window -c $DOTFILES_PATH sh -c '${EDITOR:-vim} -c "Telescope find_files"'

# reload configuration
bind r source-file $HOME/.config/tmux/tmux.conf \; display 'tmux.conf sourced'

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# sessions
bind C-c new-session -c $HOME # create session
bind BTab switch-client -l    # move to last session

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right

# pane resize and split
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2
bind s split-pane
bind v split-pane -h

# window
# bind -r C-h previous-window # select previous window
# bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window
bind . command-prompt -1 -p "(smart-move-window)" "run 'sh #{TMUX_SCRIPTS}/move-window %%'"

# buffers
bind b list-buffers     # list paste buffers
bind p paste-buffer -p  # paste from the top paste buffer
bind P choose-buffer    # choose which buffer to paste from

# copy mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X begin-selection \; send -X rectangle-toggle
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi y send -X copy-selection-and-cancel

#
bind ` list-keys -N
bind Enter run-shell "#{TMUX_SCRIPTS}/wiki"
bind g new-window -n "lazygit" -c "#{pane_current_path}" lazygit
bind f run-shell "tmux display-popup -w 50 -h 15 -E '#{TMUX_SCRIPTS}/sessionizer'" # run-shell because display-popup do not accepts FORMATS
bind w choose-tree -Zs -K "#{e|+:#{line},1}"
bind X confirm-before -p "Kill #{pane_current_command} (y/N)?" "run 'pgrep -P #{pane_pid} --newest | xargs kill'"
bind m display-popup -E "spt" # spotify cli

# plugins
set-environment -g TMUX_PLUGIN_MANAGER_PATH $HOME/.tmux/plugins

# install tpm if not installed
if-shell '[[ ! -d #{TMUX_PLUGIN_MANAGER_PATH} ]]' {
  run-shell "git clone https://github.com/tmux-plugins/tpm #{TMUX_PLUGIN_MANAGER_PATH}/tpm"
}

set -g @plugin 'tmux-plugins/tpm'

# vimium like selection
set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-key Space
set -g @fingers-main-action :paste:
set -g @fingers-shift-action :copy:

run-shell "#{TMUX_PLUGIN_MANAGER_PATH}/tpm/tpm"

# Styles
right_arrow_icon=''
left_arrow_icon=''

# Based On: https://github.com/edeneast/nightfox.nvim
setenv -g TC '#aeafb0'
setenv -g FG '#e4dcd5'
setenv -g BG '#131a24'
setenv -g HLTC '#131a24'
setenv -g HLFG '#2f4159'
setenv -g HLBG '#719cd6'
# light mode
# setenv -g TC '#824d5b'
# setenv -g FG '#e4dcd5'
# setenv -g BG '#e4dcd4'
# setenv -g HLTC '#e5dcd4'
# setenv -g HLFG '#acb0c7'
# setenv -g HLBG '#2848a9'

set -gqF pane-border-style "fg=#{TC},bg=default"
set -gqF pane-active-border-style "fg=#{TC},bg=#{BG}"
set -gqF display-panes-colour "#{HLTC}"
set -gqF display-panes-active-colour "#{TC}"
set -gqF clock-mode-colour "#{TC}"
set -gqF clock-mode-style 24
set -gqF message-style "fg=#{TC},bg=#{BG}"
set -gqF message-command-style "fg=#{TC},bg=#{BG}"
set -gqF mode-style "bg=#{TC},fg=#{FG}"

set -gq window-status-format " #I:#W#F "
set -gq window-status-current-format "#[fg=#{BG},bg=#{HLFG}]$right_arrow_icon#[fg=#{TC},bold] #I:#W#F #[fg=#{HLFG},bg=#{BG},nobold]$right_arrow_icon"
set -gq window-status-separator ""
set -gq window-status-current-style "fg=#{TC},bg=#{BG}"

set -gq status-right-style "fg=#{FG},bg=#{BG}"
set -gq status-right-length 150
set -gq status-right "#[fg=#{HLFG}]$left_arrow_icon#[fg=#{TC},bg=#{HLFG}] %Y-%m-%d %H:%M #[fg=#{HLBG},bg=#{HLFG}]$left_arrow_icon#[fg=#{HLTC},bg=#{HLBG}] #H "

set -gq status-left-style "fg=#{HLTC},bg=#{HLBG}"
set -gq status-left-length 150
set -gq status-left " #S #[fg=#{HLBG},bg=#{HLTC}]$right_arrow_icon"
