set -a terminal-overrides ",alacritty:RGB"

# general options
set  -g prefix C-F8           # fake prefix (some command don't work without a prefix)
set  -g base-index 1          # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
setw -g automatic-rename on   # rename window to reflect current program
set  -g renumber-windows on   # renumber windows when a window is closed
set  -g escape-time 0         # no delay esc
set  -g status off            # no status line
set  -g history-limit 5000    # busted history
set  -g detach-on-destroy off # prevent detach on last panel is closed but there are other sessions
set  -g automatic-rename-format "#($XDG_CONFIG_HOME/tmux/scripts/tmux-pane-titler.sh #{pane_current_command} #{pane_current_path})"

# hooks
start-server
set-hook -g session-closed 'choose-tree -Z'  # when session is closed select which one to move

# aliases
set -s command-alias vsplit='split -h'

# prefix tricky
bind -n C-a switch-client -T prefix \; run "#($XDG_CONFIG_HOME/tmux/scripts/tmux-floating-status.sh)"

# edit configuration
bind e new-window -n "~/.tmux.conf" sh -c '${EDITOR:-vim} $XDG_CONFIG_HOME/tmux/tmux.conf && tmux source $XDG_CONFIG_HOME/tmux/tmux.conf && tmux display ".tmux.conf sourced"'

# reload configuration
bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display '~/.tmux.conf sourced'

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# sessions
bind C-c new-session        # create session
bind BTab switch-client -l  # move to last session

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window
bind . command-prompt -1 -p "(smart-move-window)" "run 'bash $XDG_CONFIG_HOME/tmux/scripts/tmux-smart-move-window.sh %%'"

# buffers
bind b list-buffers     # list paste buffers
bind p paste-buffer -p  # paste from the top paste buffer
bind P choose-buffer    # choose which buffer to paste from

# copy mode
bind v copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X begin-selection \; send -X rectangle-toggle
bind -T copy-mode-vi Escape send -X cancel 
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi i command-prompt -1 -p "inner selection" "run 'bash $XDG_CONFIG_HOME/tmux/scripts/tmux-select-inner.sh %%'"

#
bind ` list-keys -N
bind Enter run-shell "tmux new-window -c $VIMWIKI_PATH -n 'Vimwiki' 'nvim -c VimwikiIndex'"
bind g new-window -n "lazygit" lazygit
bind P new-window htop
bind f display-popup -E $XDG_CONFIG_HOME/tmux/scripts/tmux-sessionizer.sh 
bind ? display-popup -E $XDG_CONFIG_HOME/tmux/scripts/tmux-cht.sh
bind w run 'tmux choose-tree -Zw -f "##{==:##S,#S}"'
bind W choose-tree -Zw

# plugins
# plugins manager
set -g @plugin 'tmux-plugins/tpm'
set-environment -g TMUX_PLUGIN_MANAGER_PATH $HOME/.tmux/plugins/

# vimium like selection
set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-key Space
set -g @fingers-main-action :paste:
set -g @fingers-shift-action :copy:

run '~/.tmux/plugins/tpm/tpm'
