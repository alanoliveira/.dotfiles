set-environment -g TMUX_SCRIPTS "$HOME/.config/tmux/scripts/"

set -g default-terminal "tmux-256color"
set -a terminal-overrides ",alacritty:RGB"

# general options
set  -g exit-empty off
set  -g base-index 1          # start windows numbering at 1
set  -g renumber-windows on   # renumber windows when a window is closed
set  -g escape-time 0         # no delay esc
set  -g history-limit 5000    # busted history
set  -g detach-on-destroy off # prevent detach on last panel is closed but there are other sessions
set  -g status-interval 0     # faster panel update
setw -g pane-base-index 1     # make pane numbering consistent with windows
setw -g automatic-rename on   # rename window to reflect current program
setw -g automatic-rename-format "#{?#{==:#{pane_current_command},#{b:SHELL}}, #{b:pane_current_path},#{?#{==:#{pane_current_command},nvim}, #{b:pane_current_path},#{pane_current_command}}}"
setw -g mode-keys vi

# tricky to display status only when prefix is active
set  -g status off
set  -g prefix None
bind -n S-F1 switch-client -T prefix \; display-message -d 0 "#{E:status-format[0]}"

# aliases
set -s command-alias[103] cd="attach-session -t . -c '#{pane_current_path}'"

# bindings

bind r source-file $HOME/.config/tmux/tmux.conf \; display 'tmux.conf sourced'
bind c new-window $SHELL -i
bind g new-window -n "lazygit" -c "#{pane_current_path}" lazygit
bind f run-shell "tmux display-popup -w 50 -h 15 -E '#{TMUX_SCRIPTS}/sessionizer $HOME/Projects/'"
bind w choose-tree -Zs -K "#{e|+:#{line},1}"
bind ? split-window -l 40% "aichat"

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right

# pane resize
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# copy mode
bind v copy-mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X begin-selection \; send -X rectangle-toggle
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi y send -X copy-selection-and-cancel

# display split menu
bind s display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -x P -y P \
  "H Split" h { split-window -h -c "#{pane_current_path}" $SHELL -i } \
  "V Split" v { split-window -v -c "#{pane_current_path}" $SHELL -i } \
  '' \
  "#{?#{>:#{window_panes},1},,-}Swap Up" u { swap-pane -U } \
  "#{?#{>:#{window_panes},1},,-}Swap Down" d { swap-pane -D } \
  "#{?pane_marked_set,,-}Swap Marked" s { swap-pane } \
  '' \
  "#{?pane_marked,Unmark,Mark}" m { select-pane -m } \
  "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z }

# display kill menu
bind x display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -x P -y P \
  "Kill Pane" X { kill-pane } \
  "Kill #{pane_current_command}" k { run 'pgrep -P #{pane_pid} --newest #{pane_current_command} | xargs kill' } \
  Respawn R { respawn-pane -k } \
  "Kill Server" s { kill-server }

# plugins
set-environment -g TMUX_PLUGIN_MANAGER_PATH $HOME/.tmux/plugins

# install tpm if not installed
if-shell '[[ ! -d #{TMUX_PLUGIN_MANAGER_PATH} ]]' {
  run-shell "git clone https://github.com/tmux-plugins/tpm #{TMUX_PLUGIN_MANAGER_PATH}/tpm"
}

set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'Morantron/tmux-fingers'
set -g @fingers-key Space
set -g @fingers-main-action :paste:
set -g @fingers-shift-action :copy:
set -g @fingers-ctrl-action 'xargs tmux new-window nvim'
set -g @fingers-alt-action :open:

set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavor 'macchiato' # latte, frappe, macchiato, mocha
set -g @catppuccin_window_text " #W"
set -g @catppuccin_window_current_text " #W"
set -g @catppuccin_directory_text " #{=/-25/…:pane_current_path}"
set -g @catppuccin_window_status_style "basic"
set -g @catppuccin_status_left_separator "█"
set -g window-status-separator ""
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_directory}#{E:@catppuccin_status_session}"

run-shell "#{TMUX_PLUGIN_MANAGER_PATH}/tpm/tpm"
